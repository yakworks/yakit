/* fab-backdrop.svelte generated by Svelte v3.38.2 */
import {
	SvelteComponent,
	assign,
	compute_rest_props,
	detach,
	element,
	exclude_internal_props,
	get_spread_update,
	init,
	insert,
	noop,
	safe_not_equal,
	set_attributes
} from "svelte/internal";

import { classNames } from "../shared/utils";
import { restProps } from "../shared/rest-props";

function create_fragment(ctx) {
	let div;

	let div_levels = [
		{ class: /*classes*/ ctx[1] },
		{ "data-f7-slot": /*f7Slot*/ ctx[0] },
		restProps(/*$$restProps*/ ctx[2])
	];

	let div_data = {};

	for (let i = 0; i < div_levels.length; i += 1) {
		div_data = assign(div_data, div_levels[i]);
	}

	return {
		c() {
			div = element("div");
			set_attributes(div, div_data);
		},
		m(target, anchor) {
			insert(target, div, anchor);
		},
		p(ctx, [dirty]) {
			set_attributes(div, div_data = get_spread_update(div_levels, [
				dirty & /*classes*/ 2 && { class: /*classes*/ ctx[1] },
				dirty & /*f7Slot*/ 1 && { "data-f7-slot": /*f7Slot*/ ctx[0] },
				dirty & /*$$restProps*/ 4 && restProps(/*$$restProps*/ ctx[2])
			]));
		},
		i: noop,
		o: noop,
		d(detaching) {
			if (detaching) detach(div);
		}
	};
}

function instance($$self, $$props, $$invalidate) {
	let classes;
	const omit_props_names = ["class","f7Slot"];
	let $$restProps = compute_rest_props($$props, omit_props_names);
	let { class: className = undefined } = $$props;
	let { f7Slot = "fixed" } = $$props;

	$$self.$$set = $$new_props => {
		$$props = assign(assign({}, $$props), exclude_internal_props($$new_props));
		$$invalidate(2, $$restProps = compute_rest_props($$props, omit_props_names));
		if ("class" in $$new_props) $$invalidate(3, className = $$new_props.class);
		if ("f7Slot" in $$new_props) $$invalidate(0, f7Slot = $$new_props.f7Slot);
	};

	$$self.$$.update = () => {
		if ($$self.$$.dirty & /*className*/ 8) {
			$: $$invalidate(1, classes = classNames(className, "fab-backdrop"));
		}
	};

	return [f7Slot, classes, $$restProps, className];
}

class Fab_backdrop extends SvelteComponent {
	constructor(options) {
		super();
		init(this, options, instance, create_fragment, safe_not_equal, { class: 3, f7Slot: 0 });
	}
}

export default Fab_backdrop;